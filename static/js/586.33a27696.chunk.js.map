{"version":3,"file":"static/js/586.33a27696.chunk.js","mappings":"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","sources":["helpers/constants/schema.js","components/ContactForm/ContactFormInput/ContactFormInput.jsx","helpers/numberNormalize.js","components/ContactForm/FormButton/FormButton.jsx","components/ContactForm/ErrorMessages/ErrorMessages.jsx","components/ContactForm/ContactForm.jsx","helpers/nameNormalize.js","helpers/deleteModalSettings.js","components/ContactTable/ContactTableItem/ModalForDelete.jsx","components/ContactTable/ContactTableItem/ContactTableItem.jsx","components/ContactTable/TableHead/TableHead.jsx","components/ContactTable/ContactTable.jsx","components/Filter/Filter.jsx","components/App/FilterAndTable.jsx","pages/contacts/Contacts.jsx"],"sourcesContent":["import * as yup from 'yup';\n\nexport const schema = yup.object().shape({\n  name: yup\n    .string()\n    .min(1)\n    .max(18)\n    .required()\n    .matches(/^[a-zA-Zа-яА-ЯіїґІЇҐ].*$/, 'Name must start with letters'),\n  phone: yup\n    .string()\n    .min(7)\n    .max(18)\n    .required()\n    .matches(\n      /^\\+?(\\d{2}-?\\d{3}-?\\d{3}-?\\d{2}-?\\d{2})$|^\\d{7}$|^\\d{10}$|^\\+?\\d{12}$/,\n      `Number must have 7, 10 or 12 digits`\n    ),\n});\n\nexport const registrationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .min(2, 'Name should be at least 2 characters')\n    .max(16, 'Name should not exceed 16 characters')\n    .required('Name is required'),\n  email: yup\n    .string()\n    .email('Please enter a valid email address')\n    .required('Email is required'),\n  password: yup\n    .string()\n    .min(7, 'Password should be at least 7 characters long')\n    .required('Password is required'),\n  confirmPassword: yup\n    .string()\n    .oneOf([yup.ref('password'), null], 'Passwords must match')\n    .required('Please confirm your password'),\n});\n","import { LiaUserEditSolid } from 'react-icons/lia';\nimport { FiPhoneMissed } from 'react-icons/fi';\nimport { Field } from 'formik';\nimport PropTypes from 'prop-types';\n\nexport function Inputs({ isThemeDark }) {\n  return (\n    <>\n      <label\n        htmlFor=\"name\"\n        className={`mt-2 text-xl flex items-center gap-2 md:ml-2 md:w-10/12\n      md2:text-sm font-light sm:mt-1`}\n      >\n        <LiaUserEditSolid className=\"ml-3 md:ml-6\" />\n        Name\n      </label>\n      <Field\n        type=\"text\"\n        name=\"name\"\n        id=\"name\"\n        placeholder=\"Enter name\"\n        className={`${\n          isThemeDark\n            ? ' text-darkFontDark bg-sky-900 placeholder:text-darkFontDark '\n            : ' text-darkFont bg-lightPartsColor placeholder:text-darkFont '\n        }text-center mx-auto w-11/12 py-1 px-5 rounded-sm h-12 \n          border-0 outline-none   \n           placeholder:font-extralight\n         md:w-10/12    md:h-10 text-xl md:py-0.5 md:px-2 placeholder:opacity-50 \n           ssm:text-base  font-light  transition-all  2xl2:text-2xl`}\n      />\n      <label\n        htmlFor=\"phone\"\n        className={`mt-1 text-xl flex items-center gap-2 md:ml-2 md:w-10/12\n      md:text-4 font-light md2:text-xs`}\n      >\n        <FiPhoneMissed className=\"ml-3 md:ml-6 w-[14px] h-[14px]\" />\n        Phone Number\n      </label>\n      <Field\n        type=\"tel\"\n        name=\"phone\"\n        id=\"phone\"\n        placeholder=\"Enter phone number\"\n        className={`${\n          isThemeDark\n            ? ' text-darkFontDark bg-sky-900 placeholder:text-darkFontDark  '\n            : ' text-darkFont bg-lightPartsColor placeholder:text-darkFont  '\n        } text-center w-11/12 py-1 px-5 rounded-sm h-12 \n        border-0 outline-none mx-auto  \n        md:w-10/12  text-xl md:h-10 md:py-0.5 md:px-2 placeholder:opacity-50 \n        ssm:text-base  placeholder:font-extralight font-light  transition-all 2xl2:text-2xl`}\n      />\n    </>\n  );\n}\n\nInputs.propTypes = {\n  isThemeDark: PropTypes.bool.isRequired,\n};\n","export default function normalizePhoneNumber(value) {\n  const cleaned = value.replace(/\\D/g, '');\n\n  const patterns = [\n    /^(\\d{2})(\\d{3})(\\d{3})(\\d{4})$/,\n    /^(\\d{3})(\\d{3})(\\d{4})$/,\n    /^(\\d{3})(\\d{4})$/,\n  ];\n\n  for (const pattern of patterns) {\n    const match = cleaned.match(pattern);\n    if (match) {\n      return match.slice(1).join('-');\n    }\n  }\n  return cleaned;\n}\n","import { AiOutlineUserAdd } from 'react-icons/ai';\nimport { PulseLoader } from 'react-spinners';\nimport PropTypes from 'prop-types';\n\nexport const FormButton = ({ isLoading, isThemeDark }) => {\n  return (\n    <button\n      type=\"submit\"\n      disabled={isLoading}\n      className={`${\n        isThemeDark\n          ? 'shadow-none hover:bg-buttonHoverColorDark text-buttonTextColorDark hover:text-lightPartsColorDark bg-buttonColorDark'\n          : 'shadow-shadowBox hover:bg-buttonHoverColor text-buttonTextColor bg-buttonColor'\n      } text-center font-light w-40 h-11 rounded-sm border-none outline-none mx-auto cursor-pointer shadow-md flex items-center justify-around transition-all duration-30 ${\n        isThemeDark ? 'text-lg md:w-48' : 'text-lg md:w-48'\n      } ssm:w-40 ssm:h-10 md2:text-sm`}\n    >\n      {isLoading ? (\n        <PulseLoader\n          color={`${isThemeDark ? '#3f78cc ' : '#F5DEB3 '}`}\n          size=\"6px\"\n        />\n      ) : (\n        <>\n          Add Contact <AiOutlineUserAdd />\n        </>\n      )}\n    </button>\n  );\n};\n\nFormButton.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n  isThemeDark: PropTypes.bool.isRequired,\n};\n","import { ErrorMessage } from 'formik';\n\nexport const ErrorMessages = () => {\n  return (\n    <div\n      className=\"w-full flex justify-center font-extralight items-center flex-col \n          h-20 mt-2 md:text-base md:h-7 text-center\"\n    >\n      <ErrorMessage\n        className=\"text-xl text-errorMsg m-0 p-0 font-extralight items-center \n              md:w-10/12 md:text-base md2:text-sm\"\n        name=\"name\"\n        component=\"div\"\n      />\n      <ErrorMessage\n        className=\"text-xl text-errorMsg m-0 p-0 font-extralight items-center \n              md:w-10/12 md:text-base md2:text-sm\"\n        name=\"phone\"\n        component=\"div\"\n      />\n    </div>\n  );\n};\n","import { Formik, Form } from 'formik';\nimport PropTypes from 'prop-types';\nimport { schema } from '../../helpers/constants';\nimport { succesMessage, nameCheckerError } from 'helpers/notiflix';\nimport { Inputs } from './ContactFormInput/ContactFormInput';\nimport normalizePhoneNumber from 'helpers/numberNormalize';\nimport normalizeName from 'helpers/nameNormalize';\nimport { FormButton } from './FormButton/FormButton';\nimport { ErrorMessages } from './ErrorMessages/ErrorMessages';\nimport {\n  useGetAllContactsQuery,\n  usePostContactMutation,\n} from '../../redux/contact/contacts-api';\n\nconst initialValues = {\n  name: '',\n  phone: '',\n};\n\nexport function ContactForm({ isThemeDark }) {\n  const { data } = useGetAllContactsQuery();\n  const [addContact, { isLoading }] = usePostContactMutation();\n\n  const handleSubmit = (values, { resetForm }) => {\n    const { name, phone } = values;\n\n    let someNum = normalizePhoneNumber(phone);\n    let normName = normalizeName(name);\n\n    //Cheking contact wich already exist\n    const isNameExists =\n      Array.isArray(data) &&\n      data.some(contact => {\n        return contact.name.toLowerCase() === normName.toLowerCase();\n      });\n    const isPhoneExists =\n      Array.isArray(data) &&\n      data.some(contact => {\n        return normalizePhoneNumber(contact.number) === someNum;\n      });\n    if (isNameExists && isPhoneExists) {\n      return nameCheckerError();\n    }\n\n    //adding contact\n    addContact({ name: normName, number: someNum });\n    succesMessage();\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <Form\n        autoComplete=\"off\"\n        className={`${\n          isThemeDark\n            ? ' shadow-shadowBoxDark from-smallWraperGradient1Dark to-smallWraperGradient2Dark '\n            : ' from-smallWraperGradient1 shadow-shadowBox to-smallWraperGradient2 '\n        }  flex gap-2 flex-col w-1/3 py-20 pr-7 pl-5 rounded-sm\n          shadow-lg bg-gradient-to-tr md:py-12 md:px-5 md:min-h-0 md:w-[99%]\n          transition-all  overflow-hidden ssm2:w-12/12 ssm2:py-6 ssm2:m-0 ssm2:pt-16`}\n      >\n        <h1 className=\"text-center text-3xl m-0 md:text-xl md2:text-xl font-normal\">\n          Add Contact Field\n        </h1>\n        <Inputs isThemeDark={isThemeDark} />\n        <ErrorMessages />\n        <FormButton isLoading={isLoading} isThemeDark={isThemeDark} />\n      </Form>\n    </Formik>\n  );\n}\n\nContactForm.propTypes = {\n  isThemeDark: PropTypes.bool.isRequired,\n};\n","export default function normalizeName(value) {\n  const splited = value.split(' ').map(word => {\n    if (word.length === 0) return '';\n    const firstChar = word[0];\n    const restOfWord = word.slice(1).toLowerCase();\n    return firstChar.toUpperCase() + restOfWord;\n  });\n\n  return splited.join(' ').trim();\n}\n","const windowWidth = window.innerWidth;\nconst settings = {\n  overlay: {\n    position: 'fixed',\n    zIndex: 999,\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(250, 250, 210, 0.5)',\n  },\n  content: {\n    position: 'absolute',\n    top: '40%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    border: '1px solid #ccc',\n    background: 'rgb(245, 187, 86)',\n    overflow: 'auto',\n    WebkitOverflowScrolling: 'touch',\n    borderRadius: '4px',\n    outline: 'none',\n    padding: windowWidth > 768 ? '60px 40px' : '20px 10px',\n  },\n};\n\nconst settings2 = {\n  overlay: {\n    position: 'fixed',\n    zIndex: 999,\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(48, 45, 62, 0.3)',\n  },\n  content: {\n    position: 'absolute',\n    top: '40%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    border: '1px solid #ccc',\n    background: 'rgb(4, 23, 55)',\n    overflow: 'auto',\n    WebkitOverflowScrolling: 'touch',\n    borderRadius: '4px',\n    outline: 'none',\n    padding: windowWidth > 768 ? '60px 40px' : '20px 10px',\n  },\n};\n\nexport { settings, settings2 };\n","import { settings, settings2 } from 'helpers/deleteModalSettings';\nimport { useRef } from 'react';\nimport Modal from 'react-modal';\n\nModal.setAppElement('#root');\n\nexport const ModalFordelete = ({\n  isThemeDark,\n  contact,\n  modalIsOpen,\n  closeModal,\n  handleDelete,\n}) => {\n  const subtitle = useRef();\n  return (\n    <Modal\n      style={isThemeDark ? settings2 : settings}\n      isOpen={modalIsOpen}\n      onRequestClose={closeModal}\n      contentLabel=\"Delete Confirmation\"\n      className=\"md:w-[290px] md:p-6 md3:w-[420px] md3:p-12\"\n    >\n      <h2\n        ref={subtitle}\n        className={`${\n          isThemeDark ? 'text-darkFontDark' : 'text-darkFont'\n        } text-center   text-2xl md:text-sm `}\n      >\n        Delete contact{' '}\n        <span className=\"font-bold text-green-700\">{contact.name}</span>?\n      </h2>\n      <div\n        className=\"flex jusrify-center items-center mx-auto mt-10 \n             md:mt-6 gap-1 \"\n      >\n        <button\n          onClick={() => handleDelete(contact.id)}\n          className={`${\n            isThemeDark\n              ? ' bg-deleteBtnColorDark hover:bg-deleteBtnHoverColorDark text-darkFontDark '\n              : ' bg-deleteBtnColor hover:bg-deleteBtnHoverColor text-lightPartsColor '\n          }text-4  \n            border-none py-3 px-10 rounded-0.5 cursor-pointer \n            duration-300 mx-auto  md:py-2 md:px-5\n             font-light 2xl:text-xl`}\n        >\n          Delete\n        </button>\n        <button\n          onClick={closeModal}\n          className={`${\n            isThemeDark\n              ? ' bg-buttonColorDark text-darkFontDark hover:text-lightPartsColorDark hover:bg-buttonHoverColorDark '\n              : ' bg-buttonColor text-lightPartsColor hover:bg-buttonHoverColor '\n          }text-4  \n            border-none py-3 px-10 rounded-0.5 cursor-pointer \n            duration-300 mx-auto  md:py-2 md:px-5\n            font-light 2xl:text-xl`}\n        >\n          Cancel\n        </button>\n      </div>\n    </Modal>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { AiOutlineUserDelete } from 'react-icons/ai';\nimport { PulseLoader } from 'react-spinners';\nimport normalizePhoneNumber from 'helpers/numberNormalize';\nimport { ModalFordelete } from './ModalForDelete';\nimport { useState } from 'react';\nimport { useDeleteContactMutation } from '../../../redux/contact/contacts-api';\nimport { useTheme } from '../../../helpers/hooks/theme-hook';\n\n//ContactTableItem + Modal window for contact delete\nexport function ContactTableItem({ contact, index }) {\n  const { isThemeDark } = useTheme();\n  const windowWidth = window.innerWidth;\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n\n  const handleDelete = id => {\n    deleteContact(id);\n    setIsOpen(false);\n  };\n\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  return (\n    <tr\n      className={`${\n        isThemeDark\n          ? ' border-tableBorderColorDark '\n          : ' border-tableBorderColor '\n      } border-b-2  `}\n    >\n      <td\n        width=\"5%\"\n        className={`${\n          isThemeDark ? ' bg-lightPartsColorDark ' : ' bg-lightPartsColor '\n        }p-1 text-cente pl-4 ssm2:pl-2`}\n      >\n        {index + 1}\n      </td>\n      <td\n        width=\"44%\"\n        className={`${\n          isThemeDark ? ' bg-lightPartsColorDark ' : ' bg-lightPartsColor '\n        }p-1 text-center  user-selectable  md:text-md   `}\n      >\n        {contact.name}\n      </td>\n      <td\n        width=\"42%\"\n        className={`${\n          isThemeDark ? ' bg-lightPartsColorDark ' : ' bg-lightPartsColor '\n        }p-1 text-center   md:text-md  user-selectable `}\n      >\n        {normalizePhoneNumber(contact.number)}\n      </td>\n      <td\n        width=\"15%\"\n        className={`${\n          isThemeDark ? ' bg-lightPartsColorDark ' : ' bg-lightPartsColor '\n        } p-1 text-center   md:text-md   pr-3 1xl2:pr-6 `}\n      >\n        <button\n          id=\"delete-btn\"\n          onClick={openModal}\n          disabled={isDeleting}\n          className={` ${\n            isThemeDark\n              ? ' bg-buttonColorDark hover:bg-buttonHoverColorDark text-lightPartsColorDark hover:text-darkFontDark'\n              : ' bg-buttonColor hover:bg-buttonHoverColor text-lightPartsColor '\n          } mx-auto border-none 1xl2:text-lg\n           py-1 px-2 min-w-[50px] min-h-[28px] text-xs cursor-pointer \n           duration-300 flex text-center items-center \n            rounded-sm font-light justify-center sm:min-h-[20px] sm:min-w-[30px]`}\n        >\n          {isDeleting ? (\n            <PulseLoader\n              color={`${isThemeDark ? '#3f78cc ' : '#F5DEB3 '}`}\n              size=\"2px\"\n            />\n          ) : windowWidth < 768 ? (\n            <AiOutlineUserDelete style={{ marginRight: '4px' }} />\n          ) : (\n            'Delete'\n          )}\n        </button>\n      </td>\n      <ModalFordelete\n        isThemeDark={isThemeDark}\n        contact={contact}\n        modalIsOpen={modalIsOpen}\n        closeModal={closeModal}\n        handleDelete={handleDelete}\n      />\n    </tr>\n  );\n}\n\nconst ContactType = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nContactTableItem.propTypes = {\n  contact: PropTypes.shape(ContactType).isRequired,\n  index: PropTypes.number,\n};\n","import PropTypes from 'prop-types';\n\nexport const TableHead = ({ isThemeDark }) => {\n  return (\n    <thead className=\"text-lg  right-0 left-0 top-0 w-full  1xl2:text-2xl\">\n      <tr\n        className={`${\n          isThemeDark\n            ? 'border-tableBorderColorDark '\n            : 'border-tableBorderColor '\n        } border-b-2  `}\n      >\n        <th\n          width=\"7%\"\n          className={`${\n            isThemeDark\n              ? 'bg-tableHeaderBackgroundDark  text-darkFontDark '\n              : 'bg-tableHeaderBackground text-darkFont '\n          } items-center  \n           font-bold min-w-4 p-2 md:p-0.5 `}\n        >\n          #\n        </th>\n        <th\n          width=\"40%\"\n          className={`${\n            isThemeDark\n              ? 'bg-tableHeaderBackgroundDark text-darkFontDark '\n              : 'bg-tableHeaderBackground text-darkFont '\n          } items-center \n           font-bold min-w-4 p-2 md:p-0.5  `}\n        >\n          Name\n        </th>\n        <th\n          width=\"42%\"\n          className={`${\n            isThemeDark\n              ? 'bg-tableHeaderBackgroundDark text-darkFontDark '\n              : 'bg-tableHeaderBackground text-darkFont '\n          }items-center  \n           font-bold min-w-4 p-2 md:p-0.5  `}\n        >\n          Phone Number\n        </th>\n        <th\n          width=\"15%\"\n          className={`${\n            isThemeDark\n              ? 'bg-tableHeaderBackgroundDark  text-darkFontDark '\n              : ' bg-tableHeaderBackground text-darkFont '\n          }items-center  \n           font-bold min-w-4 p-2 md:p-0.5  pr-3  1xl2:pr-7`}\n        >\n          Action\n        </th>\n      </tr>\n    </thead>\n  );\n};\n\nTableHead.propTypes = {\n  isThemeDark: PropTypes.bool.isRequired,\n};\n","import React, { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { ContactTableItem } from './ContactTableItem/ContactTableItem';\nimport { getFilterValue, getTheme } from '../../redux/selectors';\nimport { TableHead } from './TableHead/TableHead';\nimport PropTypes from 'prop-types';\n\nexport function ContactTable({ data, error, isLoading }) {\n  const filter = useSelector(getFilterValue);\n  const isThemeDark = useSelector(getTheme);\n\n  const getVisibleContacts = useMemo(() => {\n    const normalizedFilter = filter.toLowerCase();\n\n    //next step we have arrey operations so we need to check is it arrey or...\n    if (!Array.isArray(data)) {\n      return [];\n    }\n\n    //filter by name or phone\n    const filteredContacts = data.filter(\n      contact =>\n        contact.name.toLowerCase().includes(normalizedFilter) ||\n        contact.number.toLowerCase().includes(normalizedFilter)\n    );\n\n    //all contacts will go trough A-Z sort\n    const sortedContacts = [...filteredContacts].sort((a, b) => {\n      return a.name.localeCompare(b.name);\n    });\n\n    return sortedContacts;\n  }, [data, filter]);\n\n  return (\n    <div className=\"overflow-x-auto  w-[92%] ssm2:w-12/12 ssm2:p-0 ssm2:m-0 ssm2:pb-10 \">\n      <div className=\"h-6\">\n        {isLoading && !data && (\n          <p className=\"text-center font-light text-xs\">Loading...</p>\n        )}\n\n        {!isLoading && data && data.length === 0 && (\n          <p className=\"text-center font-light text-base\">No contacts found.</p>\n        )}\n\n        {error && (\n          <p className=\"text-center font-light text-base\">\n            Error fetching contacts. Please try again later.\n          </p>\n        )}\n      </div>\n\n      <table\n        className={`${\n          isThemeDark\n            ? 'border-tableBorderColorDark '\n            : 'border-tableBorderColor '\n        } border-2  border-collapese \n        mt-5 mb-5 block mx-auto overflow-auto w-full h-[490px] \n         ssm2:w-12/12 ssm2:p-0 ssm2:m-0 ssm2:text-base`}\n      >\n        <TableHead isThemeDark={isThemeDark} />\n        <tbody className=\"max-h-fit max-w-full  text-xl ssm:text-base    ssm2:text-lg  1xl2:text-2xl\">\n          {!error &&\n            getVisibleContacts.map((contact, index) => (\n              <ContactTableItem\n                key={contact.id}\n                contact={contact}\n                index={index}\n              />\n            ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nContactTable.propTypes = {\n  error: PropTypes.string,\n  isLoading: PropTypes.bool,\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeFilterValue } from '../../redux/filter/filterSlice';\nimport { getFilterValue, getTheme } from '../../redux/selectors';\nimport { TbUserSearch } from 'react-icons/tb';\n\nexport function Filter() {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(getFilterValue);\n  const isThemeDark = useSelector(getTheme);\n\n  //need for saving in local storage\n  const handleInputChange = event => {\n    const value = event.target.value;\n    dispatch(changeFilterValue(value));\n  };\n\n  return (\n    <label\n      className={`${\n        isThemeDark ? 'bg-tableHeaderBackgroundDark' : 'bg-filterLabelColor'\n      }  w-[60%] mx-auto mb-2 \n    mt-5 py-1 px-5 rounded-0.5 flex md:w-[85%] md:text-3 md:py-1\n    md:px-2 md2:w-[85%] transition-all relative`}\n    >\n      <TbUserSearch\n        className={`\n        absolute w-4 h-4 opacity-40 top-3.5 md:left-10 left-14 1xl2:left-12\n        z-10 ${\n          !isThemeDark\n            ? ' text-filterPlaceholderColor '\n            : ' text-filterPlaceholderColorDark '\n        } \n        md:w-5 md:h-5 \n        ssm:hidden   transition-all `}\n      />\n      <input\n        placeholder=\"Enter name for filter\"\n        type=\"text\"\n        value={filterValue}\n        onChange={handleInputChange}\n        className={`${\n          isThemeDark\n            ? ' bg-sky-900 text-darkFontDark placeholder:text-filterPlaceholderColorDark '\n            : 'bg-lightPartsColor text-darkFont placeholder:text-filterPlaceholderColor  '\n        }placeholder:opacity-50 flex text-m border-none outline-none w-11/12 max-w-[480px]\n         h-10 rounded mx-auto opacity-70 text-center py-0.5 pr-2 pl-12 placeholder:text-center \n         placeholder:py-1 placeholder:px-5 md:w-[90%] \n          md:pl-10 ssm:pl-1 text-xl placeholder:font-light font-light transition-all\n           placeholder:ssm:text-base`}\n      />\n    </label>\n  );\n}\n","import { ContactTable } from 'components/ContactTable/ContactTable';\nimport { Filter } from 'components/Filter/Filter';\nimport PropTypes from 'prop-types';\n\nexport const FilterAndTable = ({ data, isThemeDark }) => {\n  //styles for theme changing\n  const themeStyles = isThemeDark\n    ? ' shadow-shadowBoxDark from-smallWraperGradient1Dark to-smallWraperGradient2Dark '\n    : ' shadow-shadowBox from-smallWraperGradient1 to-smallWraperGradient2 ';\n\n  return (\n    <div\n      className={`${themeStyles} \n      w-8/12 flex justify-center items-center flex-col\n      px-5 pr-4 rounded-sm shadow-lg min-h-562 ssm:min-h-762\n      select-none bg-gradient-to-tr\n      relative md:mt-3 md:pt-0 md:pb-7 md:px-1 md2:px-2 md:w-11/12\n      transition-all ssm2:w-full ssm2:p-0 ssm2:mt-2`}\n    >\n      <Filter />\n      <ContactTable data={data} />\n    </div>\n  );\n};\n\nFilterAndTable.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      email: PropTypes.string,\n    })\n  ),\n  isThemeDark: PropTypes.bool.isRequired,\n};\n","import { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { FilterAndTable } from '../../components/App/FilterAndTable';\nimport { useGetAllContactsQuery } from '../../redux/contact/contacts-api';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\n\nexport default function Contacts({ isThemeDark }) {\n  const { data } = useGetAllContactsQuery();\n  return (\n    <div\n      className=\"flex gap-4 sm:gap-0 justify-around mx-auto \n    w-11/12   p-14 md3:p-4 1xl2:mt-5  ssm:pt-4  rounded shadow-xl\n    md:flex-col md:items-center md:text-base md:px-1.5 md:w-11/12\n    text-xl min-h-482 ssm:min-h-762 select-none \n    bg-gradient-to-tl \n      relative ssm2:w-[100%] ssm2:p-0  ssm2:m-0 \"\n    >\n      <Helmet>\n        <title>Stone-Contacts</title>\n      </Helmet>\n      <ContactForm isThemeDark={isThemeDark} />\n      <FilterAndTable data={data} isThemeDark={isThemeDark} />\n    </div>\n  );\n}\n\nContacts.propTypes = {\n  isThemeDark: PropTypes.bool.isRequired,\n};\n"],"names":["schema","yup","shape","name","min","max","required","matches","phone","registrationSchema","email","password","confirmPassword","oneOf","Inputs","isThemeDark","htmlFor","className","type","id","placeholder","normalizePhoneNumber","value","cleaned","replace","pattern","match","slice","join","FormButton","isLoading","disabled","PulseLoader","color","size","ErrorMessages","component","initialValues","ContactForm","data","useGetAllContactsQuery","usePostContactMutation","addContact","validationSchema","onSubmit","values","resetForm","someNum","normName","split","map","word","length","firstChar","restOfWord","toLowerCase","toUpperCase","trim","isNameExists","Array","isArray","some","contact","isPhoneExists","number","nameCheckerError","succesMessage","autoComplete","windowWidth","window","innerWidth","settings","overlay","position","zIndex","top","left","right","bottom","backgroundColor","content","marginRight","transform","border","background","overflow","WebkitOverflowScrolling","borderRadius","outline","padding","settings2","Modal","ModalFordelete","modalIsOpen","closeModal","handleDelete","subtitle","useRef","style","isOpen","onRequestClose","contentLabel","ref","onClick","ContactTableItem","index","useTheme","useState","setIsOpen","useDeleteContactMutation","deleteContact","isDeleting","width","TableHead","ContactTable","error","filter","useSelector","getFilterValue","getTheme","getVisibleContacts","useMemo","normalizedFilter","filteredContacts","includes","sort","a","b","localeCompare","Filter","dispatch","useDispatch","filterValue","onChange","event","target","changeFilterValue","FilterAndTable","themeStyles","Contacts","Helmet"],"sourceRoot":""}