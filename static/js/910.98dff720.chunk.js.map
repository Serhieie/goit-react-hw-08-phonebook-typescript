{"version":3,"file":"static/js/910.98dff720.chunk.js","mappings":"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","sources":["components/Shine/RegistrationShine.jsx","helpers/constants/schema.js","helpers/validateRegistration.js","pages/registration/RegistrationFormButton.jsx","pages/registration/Policy.jsx","pages/registration/RegistrInputs.jsx","pages/registration/Registration.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\n\nexport const RegistrationShine = ({ windowSize, isThemeDark }) => {\n  const formWidthClass = windowSize.height > 440 ? 'block' : 'hidden';\n  return (\n    <div className={`${formWidthClass}`}>\n      <div\n        className={`${\n          isThemeDark ? 'top-52 right-12' : 'top-32 left-12'\n        } w-full  max-w-[280px] pointer-events-none h-full max-h-96 bg-transparent bg-opacity-50  overflow-hidden rounded-lg blur-3xl absolute   md:hidden `}\n      >\n        <div\n          className={`${\n            isThemeDark\n              ? 'from-transparent   to-violet-800 '\n              : 'from-transparent   to-amber-300 '\n          } absolute bottom-0 w-full h-full  max-w-[580px] max-h-[480px] transform \n        -translate-x-1/2 pointer-events-none -translate-y-1/2 bg-gradient-to-b from-transparent\n          rounded-full animate-shine blur-3xl`}\n        ></div>\n      </div>\n\n      <div\n        className={`${\n          isThemeDark ? 'top-10 left-2' : 'top-52  right-12'\n        } w-full  max-w-[180px] pointer-events-none h-full max-h-96 bg-transparent bg-opacity-50  overflow-hidden rounded-lg blur-3xl absolute  md:-z-10`}\n      >\n        <div\n          className={`${\n            isThemeDark\n              ? 'from-transparent   to-cyan-700 '\n              : 'from-transparent   to-amber-500 '\n          } absolute bottom-0 w-full h-full  max-w-[580px] max-h-[480px] transform \n        -translate-x-1/2 -translate-y-1/2 bg-gradient-to-b from-transparent\n          rounded-full pointer-events-none animate-shine blur-3xl`}\n        ></div>\n      </div>\n    </div>\n  );\n};\n\nRegistrationShine.propTypes = {\n  isThemeDark: PropTypes.bool.isRequired,\n};\n","import * as yup from 'yup';\n\nexport const schema = yup.object().shape({\n  name: yup\n    .string()\n    .min(1)\n    .max(18)\n    .required()\n    .matches(/^[a-zA-Zа-яА-ЯіїґІЇҐ].*$/, 'Name must start with letters'),\n  phone: yup\n    .string()\n    .min(7)\n    .max(18)\n    .required()\n    .matches(\n      /^\\+?(\\d{2}-?\\d{3}-?\\d{3}-?\\d{2}-?\\d{2})$|^\\d{7}$|^\\d{10}$|^\\+?\\d{12}$/,\n      `Number must have 7, 10 or 12 digits`\n    ),\n});\n\nexport const registrationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .min(2, 'Name should be at least 2 characters')\n    .max(16, 'Name should not exceed 16 characters')\n    .required('Name is required'),\n  email: yup\n    .string()\n    .email('Please enter a valid email address')\n    .required('Email is required'),\n  password: yup\n    .string()\n    .min(7, 'Password should be at least 7 characters long')\n    .required('Password is required'),\n  confirmPassword: yup\n    .string()\n    .oneOf([yup.ref('password'), null], 'Passwords must match')\n    .required('Please confirm your password'),\n});\n","import { register } from '../redux/auth/operations-auth';\nimport { changeIsLoadingToken } from '../redux/auth/slice-auth';\n\nexport const validateRegistration = userData => {\n  let errors = {};\n\n  if (\n    !userData.name ||\n    userData.name.trim().length < 2 ||\n    userData.name.trim().length > 16\n  ) {\n    errors = {\n      ...errors,\n      name: 'Please enter a name with at least 2 characters.',\n    };\n  }\n\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  if (!userData.email || !emailRegex.test(userData.email.trim())) {\n    errors = { ...errors, email: 'Please enter a valid email address.' };\n  }\n\n  if (!userData.password || userData.password.trim().length < 7) {\n    errors = {\n      ...errors,\n      password: 'Password should be at least 7 characters long.',\n    };\n  }\n\n  return errors;\n};\n\nexport const handleRegistration = (userData, dispatch) => {\n  const errors = validateRegistration(userData);\n\n  if (Object.keys(errors).length === 0) {\n    dispatch(register(userData));\n  } else {\n    dispatch(changeIsLoadingToken(false));\n    return errors;\n  }\n};\n","import { PulseLoader } from 'react-spinners';\nimport PropTypes from 'prop-types';\n\nexport const RegistrationFormButton = ({ isLoading, isThemeDark }) => {\n  return (\n    <button\n      type=\"submit\"\n      disabled={isLoading}\n      className={`${\n        isThemeDark\n          ? 'shadow-none hover:bg-buttonHoverColorDark text-buttonTextColorDark hover:text-lightPartsColorDark bg-buttonColorDark'\n          : 'shadow-shadowBox hover:bg-buttonHoverColor text-buttonTextColor bg-buttonColor'\n      } text-center font-light w-40 h-11 rounded-sm border-none outline-none \n      mx-auto cursor-pointer shadow-md mt-4 flex items-center justify-around transition-all duration-30 ${\n        isThemeDark ? 'text-lg md:w-48' : 'text-lg md:w-48'\n      } ssm:w-40 ssm:h-10 md2:text-sm`}\n    >\n      {isLoading ? (\n        <PulseLoader\n          color={`${isThemeDark ? '#3f78cc ' : '#F5DEB3 '}`}\n          size=\"6px\"\n        />\n      ) : (\n        <>Registration</>\n      )}\n    </button>\n  );\n};\n\nRegistrationFormButton.propTypes = {\n  isThemeDark: PropTypes.bool.isRequired,\n  isLoading: PropTypes.bool,\n};\n","import React, { useState } from 'react';\nimport { FaCheck } from 'react-icons/fa';\nimport { useSelector } from 'react-redux';\nimport { getTheme } from '../../redux/selectors';\n\nexport const Policy = ({ windowSize }) => {\n  const isThemeDark = useSelector(getTheme);\n  const [isChecked, setIsChecked] = useState(false);\n\n  //just stilization of checkbox\n  const handleCheckboxChange = () => {\n    setIsChecked(prevState => !prevState);\n  };\n\n  const widthClass = windowSize.height > 460 ? 'md3:mt-9' : 'md3:mt-2';\n\n  return (\n    <div\n      className={`\n    ${widthClass}\n    mt-10 w-full max-w-[500px] mx-auto flex relative 1xl2:mt-3`}\n    >\n      <input\n        className={`${\n          isThemeDark\n            ? 'border-none checked:bg-lightPartsColorDark bg-sky-700'\n            : 'border-darkFont checked:bg-buttonColor bg-lightPartsColor'\n        } mr-4 mt-0.5   appearance-none rounded border checked:border-transparent\n        focus:outline-none`}\n        style={{ flex: 'none', width: '24px', height: '24px' }}\n        name=\"user-privacy\"\n        type=\"checkbox\"\n        id=\"user-privacy\"\n        value=\"true\"\n        required\n        checked={isChecked}\n        onChange={handleCheckboxChange}\n      />\n      {isChecked && (\n        <span className=\"absolute top-1 left-0.5 pointer-events-none p-0.5 w-full\">\n          <FaCheck size={16} className=\"pointer-events-none\" />\n        </span>\n      )}\n\n      <label htmlFor=\"user-privacy\">\n        I accept the terms and conditions of the{' '}\n        <span\n          className={`${\n            isThemeDark ? 'text-teal-400' : 'text-teal-600'\n          } ml-2 cursor-pointer`}\n        >\n          Privacy Policy\n        </span>\n      </label>\n    </div>\n  );\n};\n","import { Field, ErrorMessage } from 'formik';\nimport { useState } from 'react';\nimport { PiEyeClosedBold } from 'react-icons/pi';\nimport { HiMiniEye } from 'react-icons/hi2';\nimport PropTypes from 'prop-types';\n\nexport const RegLogInputs = ({ windowSize, isThemeDark }) => {\n  const [showPassword1, setShowPassword1] = useState(false);\n  const [showPassword2, setShowPassword2] = useState(false);\n\n  const togglePassword = field => {\n    if (field === 1) {\n      setShowPassword1(prevShowPassword => !prevShowPassword);\n    } else if (field === 2) {\n      setShowPassword2(prevShowPassword => !prevShowPassword);\n    }\n  };\n\n  const widthClass = windowSize.height > 460 ? 'md3:mt-2' : 'md3:mt-0';\n  const withInputClass = windowSize.height > 460 ? 'md3:mt-2' : 'md3:mt-0';\n  return (\n    <>\n      <label\n        className={`\n        ${widthClass}\n        mt-6 text-xl flex items-center gap-2 md:ml-2 md:w-10/12\n      md2:text-sm font-light sm:mt-1`}\n        htmlFor=\"user-name\"\n      >\n        Name\n      </label>\n\n      <Field\n        className={`${\n          isThemeDark\n            ? ' text-darkFontDark bg-sky-900 placeholder:text-darkFontDark '\n            : ' text-darkFont bg-lightPartsColor placeholder:text-darkFont '\n        } rounded-sm mx-auto py-1 px-5  h-12 \n          border-0 outline-none   \n           placeholder:font-base\n             md:h-10 text-xl md:py-0.5 md:px-2 placeholder:opacity-50 \n           ssm:text-base w-full  font-light  transition-all  2xl2:text-2xl`}\n        type=\"text\"\n        name=\"name\"\n        id=\"name\"\n        max={16}\n        placeholder=\"Antonio Balambino\"\n      />\n      <div className=\"text-sm h-4 w-full text-center -mt-2\">\n        <ErrorMessage className=\" text-errorMsg\" name=\"name\" component=\"p\" />\n      </div>\n      <label\n        className={`\n         ${withInputClass}\n        mt-2 text-xl flex items-center gap-2 md:ml-2 \n      md2:text-sm font-light sm:mt-1`}\n        htmlFor=\"user-email\"\n      >\n        Email\n      </label>\n\n      <Field\n        className={`${\n          isThemeDark\n            ? ' text-darkFontDark bg-sky-900 placeholder:text-darkFontDark '\n            : ' text-darkFont bg-lightPartsColor placeholder:text-darkFont '\n        } rounded-sm mx-auto w-full py-1 px-5 h-12 \n          border-0 outline-none   \n           placeholder:font-base\n             md:h-10 text-xl md:py-0.5 md:px-2 placeholder:opacity-50 \n           ssm:text-base  font-light  transition-all  2xl2:text-2xl`}\n        type=\"email\"\n        name=\"email\"\n        id=\"email\"\n        placeholder=\"Balambino@mail.com\"\n        required\n      />\n      <div className=\"text-sm h-4 w-full text-center -mt-2\">\n        <ErrorMessage className=\" text-errorMsg\" name=\"email\" component=\"p\" />\n      </div>\n      <label\n        className={`\n         ${withInputClass}\n        mt-2 text-xl flex items-center gap-2 md:ml-2 \n      md2:text-sm font-light sm:mt-1`}\n        htmlFor=\"user-phone\"\n      >\n        {' '}\n        Password{' '}\n      </label>\n      <div className=\"flex\">\n        <Field\n          className={`${\n            isThemeDark\n              ? ' text-darkFontDark bg-sky-900 placeholder:text-darkFontDark '\n              : ' text-darkFont bg-lightPartsColor placeholder:text-darkFont '\n          } mx-auto  py-1 px-5 rounded-l-sm h-12 \n          border-0 outline-none   \n           placeholder:font-base\n            md:h-10 text-xl md:py-0.5 md:px-2 pr-8 placeholder:opacity-50 \n           ssm:text-base w-full  font-light  transition-all  2xl2:text-2xl`}\n          type={showPassword1 ? 'text' : 'password'}\n          name=\"password\"\n          id=\"password\"\n          min={7}\n          placeholder=\"Enter your password\"\n          required\n        />\n        <button\n          className={`${\n            isThemeDark\n              ? ' text-darkFontDark bg-sky-900 placeholder:text-darkFontDark '\n              : ' text-darkFont bg-lightPartsColor placeholder:text-darkFont '\n          } rounded-r-sm w-12 transition-all`}\n          type=\"button\"\n          onClick={() => togglePassword(1)}\n        >\n          {showPassword1 ? <HiMiniEye /> : <PiEyeClosedBold />}\n        </button>\n      </div>\n\n      <div className=\"text-sm h-4 w-full text-center -mt-2\">\n        <ErrorMessage\n          className=\" text-errorMsg text-center m-0 p-0\"\n          name=\"password\"\n          component=\"div\"\n        />\n      </div>\n      <label\n        className={`\n    ${withInputClass}\n    mt-2 text-xl flex items-center gap-2 md:ml-2 \n    md2:text-sm font-light sm:mt-1`}\n        htmlFor=\"user-confirm-password\"\n      >\n        Confirm Password\n      </label>\n      <div className=\"flex\">\n        <Field\n          className={`${\n            isThemeDark\n              ? ' text-darkFontDark bg-sky-900 placeholder:text-darkFontDark '\n              : ' text-darkFont bg-lightPartsColor placeholder:text-darkFont '\n          } rounded-l-sm mx-auto w-full py-1 px-5  h-12 \n      border-0 outline-none   \n       placeholder:font-base\n         md:h-10 text-xl md:py-0.5 md:px-2 placeholder:opacity-50 \n       ssm:text-base  font-light  transition-all  2xl2:text-2xl`}\n          type={showPassword2 ? 'text' : 'password'}\n          name=\"confirmPassword\"\n          id=\"confirmPassword\"\n          placeholder=\"Confirm your password\"\n          required\n        />\n        <button\n          className={`${\n            isThemeDark\n              ? ' text-darkFontDark bg-sky-900 placeholder:text-darkFontDark '\n              : ' text-darkFont bg-lightPartsColor placeholder:text-darkFont '\n          } rounded-r-sm w-12 transition-all`}\n          type=\"button\"\n          onClick={() => togglePassword(2)}\n        >\n          {showPassword2 ? <HiMiniEye /> : <PiEyeClosedBold />}\n        </button>\n      </div>\n\n      <div className=\"text-sm h-4 w-full text-center -mt-2\">\n        <ErrorMessage\n          className=\" text-errorMsg text-center m-0 p-0\"\n          name=\"confirmPassword\"\n          component=\"div\"\n        />\n      </div>\n    </>\n  );\n};\n\nRegLogInputs.propTypes = {\n  isThemeDark: PropTypes.bool.isRequired,\n};\n","import { handleRegistration } from '../../helpers/validateRegistration';\nimport { RegistrationFormButton } from './RegistrationFormButton';\nimport { useEffect, useState } from 'react';\nimport { Policy } from './Policy';\nimport { RegLogInputs } from './RegistrInputs';\nimport { RegistrationShine } from 'components/Shine/RegistrationShine';\nimport { useDispatch } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport { registrationSchema } from '../../helpers/constants/schema';\nimport { useAuth } from '../../helpers/hooks/auth-selector-hook';\nimport { useTheme } from '../../helpers/hooks/theme-hook';\nimport { Helmet } from 'react-helmet';\n\n//Formik state\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n  confirmPassword: '',\n};\n\n//Registration form is not have setting to LS option\nexport default function Registration() {\n  const [windowSize, setWindowSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight,\n  });\n  const dispatch = useDispatch();\n  const { isLoading } = useAuth();\n  const { isThemeDark } = useTheme();\n\n  const handleResize = () => {\n    setWindowSize({\n      width: window.innerWidth,\n      height: window.innerHeight,\n    });\n  };\n\n  //resize listener\n  useEffect(() => {\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  const handleSubmit = async (values, { resetForm }) => {\n    const { name, email, password } = values;\n    const userData = {\n      name: name.trim(),\n      email: email.trim(),\n      password: password.trim(),\n    };\n\n    //validation for inputs\n    handleRegistration(userData, dispatch);\n    resetForm();\n  };\n\n  const formWidthClass =\n    windowSize.height > 460\n      ? 'md3:w-5/12 pb-16 pt-20 '\n      : 'md3:w-10/12  md2:mt-1 pb-8';\n\n  return (\n    <>\n      <Helmet>\n        <title>StoneBook-Registration</title>\n      </Helmet>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={registrationSchema}\n        onSubmit={handleSubmit}\n        validateOnChange={false}\n        validateOnBlur={false}\n      >\n        <Form\n          autoComplete=\"off\"\n          className={`\n          ${formWidthClass}  \n          ${\n            isThemeDark\n              ? ' shadow-shadowBoxDark from-smallWraperGradient1Dark to-smallWraperGradient2Dark '\n              : ' from-smallWraperGradient1 shadow-shadowBox to-smallWraperGradient2 '\n          }  flex gap-2 flex-col pt-10 1xl2:pt-12 1xl2:pb-10 1xl2:mb-4   px-10 rounded-sm\n          shadow-lg bg-gradient-to-tr md:py-7 md:pb-14 md:px-5 md:min-h-0 md:w-[96%]\n          transition-all  ssm2:pt-16 ssm2:mt-4  mx-auto z-60 mt-4 md2:pt-8 md2:mt-8 `}\n        >\n          <h1 className=\"text-center text-4xl m-0 mt-1 md:text-2xl md2:text-2xl font-normal\">\n            Registration\n          </h1>\n          <RegLogInputs windowSize={windowSize} isThemeDark={isThemeDark} />\n          <Policy windowSize={windowSize} />\n          <RegistrationFormButton\n            isLoading={isLoading}\n            isThemeDark={isThemeDark}\n          />\n        </Form>\n      </Formik>\n      <RegistrationShine windowSize={windowSize} isThemeDark={isThemeDark} />\n    </>\n  );\n}\n"],"names":["RegistrationShine","windowSize","isThemeDark","formWidthClass","height","className","schema","yup","shape","name","min","max","required","matches","phone","registrationSchema","email","password","confirmPassword","oneOf","handleRegistration","userData","dispatch","errors","trim","length","test","validateRegistration","Object","keys","changeIsLoadingToken","register","RegistrationFormButton","isLoading","type","disabled","PulseLoader","color","size","Policy","useSelector","getTheme","useState","isChecked","setIsChecked","widthClass","style","flex","width","id","value","checked","onChange","prevState","htmlFor","RegLogInputs","showPassword1","setShowPassword1","showPassword2","setShowPassword2","togglePassword","field","prevShowPassword","withInputClass","placeholder","component","onClick","initialValues","Registration","window","innerWidth","innerHeight","setWindowSize","useDispatch","useAuth","useTheme","handleResize","useEffect","addEventListener","removeEventListener","handleSubmit","values","resetForm","Helmet","validationSchema","onSubmit","validateOnChange","validateOnBlur","autoComplete"],"sourceRoot":""}