{"version":3,"file":"static/js/236.dce12a84.chunk.js","mappings":"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","sources":["components/Shine/RegistrationShine.tsx","helpers/constants/schema.ts","pages/registration/RegistrationFormButton.tsx","pages/registration/Registration.styles.ts","pages/registration/Policy.tsx","pages/registration/RegistrationInputs/NameAndEmail.tsx","pages/registration/RegistrationInputs/PasswordAndConfirm.tsx","pages/registration/RegistrationInputs/RegistrInputs.tsx","pages/registration/Registration.tsx","helpers/validateRegistration.ts"],"sourcesContent":["import { RegistrationShineProps } from './Shines.types';\n\nexport const RegistrationShine: React.FC<RegistrationShineProps> = ({\n  windowSize,\n  isThemeDark,\n}) => {\n  const formWidthClass: string = windowSize.height > 440 ? 'block' : 'hidden';\n  return (\n    <div className={`${formWidthClass}`}>\n      <div\n        className={`${\n          isThemeDark ? 'top-52 right-12' : 'top-32 left-12'\n        } w-full  max-w-[280px] pointer-events-none h-full max-h-96 bg-transparent bg-opacity-50  overflow-hidden rounded-lg blur-3xl absolute   md:hidden `}\n      >\n        <div\n          className={`${\n            isThemeDark\n              ? 'from-transparent   to-violet-800 '\n              : 'from-transparent   to-amber-300 '\n          } absolute bottom-0 w-full h-full  max-w-[580px] max-h-[480px] transform \n        -translate-x-1/2 pointer-events-none -translate-y-1/2 bg-gradient-to-b from-transparent\n          rounded-full animate-shine blur-3xl`}\n        ></div>\n      </div>\n\n      <div\n        className={`${\n          isThemeDark ? 'top-10 left-2' : 'top-52  right-12'\n        } w-full  max-w-[180px] pointer-events-none h-full max-h-96 bg-transparent bg-opacity-50  overflow-hidden rounded-lg blur-3xl absolute  md:-z-10`}\n      >\n        <div\n          className={`${\n            isThemeDark\n              ? 'from-transparent   to-cyan-700 '\n              : 'from-transparent   to-amber-500 '\n          } absolute bottom-0 w-full h-full  max-w-[580px] max-h-[480px] transform \n        -translate-x-1/2 -translate-y-1/2 bg-gradient-to-b from-transparent\n          rounded-full pointer-events-none animate-shine blur-3xl`}\n        ></div>\n      </div>\n    </div>\n  );\n};\n","import * as yup from 'yup';\n\nexport const schema = yup.object().shape({\n  name: yup\n    .string()\n    .min(1)\n    .max(18)\n    .required()\n    .matches(/^[a-zA-Zа-яА-ЯіїґІЇҐ].*$/, 'Name must start with letters'),\n  phone: yup\n    .string()\n    .min(7)\n    .max(18)\n    .required()\n    .matches(\n      /^\\+?(\\d{2}-?\\d{3}-?\\d{3}-?\\d{2}-?\\d{2})$|^\\d{7}$|^\\d{10}$|^\\+?\\d{12}$/,\n      `Number must have 7, 10 or 12 digits`\n    ),\n});\n\nexport const registrationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .min(2, 'Name should be at least 2 characters')\n    .max(16, 'Name should not exceed 16 characters')\n    .required('Name is required'),\n  email: yup\n    .string()\n    .email('Please enter a valid email address')\n    .required('Email is required'),\n  password: yup\n    .string()\n    .min(7, 'Password should be at least 7 characters long')\n    .required('Password is required'),\n  confirmPassword: yup\n    .string()\n    .oneOf([yup.ref('password'), undefined], 'Passwords must match')\n    .required('Please confirm your password'),\n});\n","import { PulseLoader } from 'react-spinners';\nimport { RegistrationFormButtonProps } from './Registration.types';\nimport { registrationSubmitBtnStyles } from './Registration.styles';\n\nexport const RegistrationFormButton: React.FC<RegistrationFormButtonProps> = ({\n  isLoading,\n  isThemeDark,\n}) => {\n  const btnStyles: string = `${\n    isThemeDark\n      ? ' shadow-none hover:bg-buttonHoverColorDark text-buttonTextColorDark hover:text-lightPartsColorDark bg-buttonColorDark'\n      : '  shadow-shadowBox hover:bg-buttonHoverColor text-buttonTextColor bg-buttonColor'\n  } ${registrationSubmitBtnStyles}`;\n\n  return (\n    <button type=\"submit\" disabled={isLoading} className={btnStyles}>\n      {isLoading ? (\n        <PulseLoader\n          color={`${isThemeDark ? '#3f78cc ' : '#F5DEB3 '}`}\n          size=\"6px\"\n        />\n      ) : (\n        <>Registration</>\n      )}\n    </button>\n  );\n};\n","export const inputsStyles: string = `rounded-sm mx-auto py-1 px-5  h-12  border-0 outline-none placeholder:font-base\n             md:h-10 text-xl md:py-0.5 md:px-2 placeholder:opacity-50 \n           ssm:text-base w-full  font-light  transition-all  2xl2:text-2xl`;\n\nexport const registrationFormStyles: string = `flex gap-2 flex-col pt-10 1xl2:pt-12 1xl2:pb-10 1xl2:mb-4   px-10 rounded-sm\n          shadow-lg bg-gradient-to-tr md:py-7 md:pb-14 md:px-5 md:min-h-0 md:w-[96%]\n          transition-all  ssm2:pt-16 ssm2:mt-4  mx-auto z-60 mt-4 md2:pt-8 md2:mt-8`;\n\nexport const registrationSubmitBtnStyles: string = `text-lg md:w-48 text-center font-light w-40 h-11 rounded-sm border-none outline-none \n      mx-auto cursor-pointer shadow-md mt-4 flex items-center justify-around\n      transition-all duration-30 ssm:w-40 ssm:h-10 md2:text-sm`;\n","import React, { useState } from 'react';\nimport { FaCheck } from 'react-icons/fa';\nimport { useSelector } from 'react-redux';\nimport { getTheme } from '../../redux/theme/theme-selectors';\n\ninterface PolicyProps {\n  windowSize: { height: number; width: number };\n}\n\nexport const Policy: React.FC<PolicyProps> = ({ windowSize }) => {\n  const isThemeDark: boolean = useSelector(getTheme);\n  const [isChecked, setIsChecked] = useState<boolean>(false);\n\n  //just stilization of checkbox\n  const handleCheckboxChange = (): void => {\n    setIsChecked(prevState => !prevState);\n  };\n\n  const widthClass: string = ` ${\n    windowSize.height > 460 ? 'md3:mt-9' : 'md3:mt-2'\n  }  mt-10 w-full max-w-[500px] mx-auto flex relative 1xl2:mt-3`;\n  const checkBoxStyle: string = `${\n    isThemeDark\n      ? 'border-none checked:bg-lightPartsColorDark bg-sky-700'\n      : 'border-darkFont checked:bg-buttonColor bg-lightPartsColor'\n  } mr-4 mt-0.5   appearance-none rounded border checked:border-transparent\n        focus:outline-none`;\n\n  return (\n    <div className={widthClass}>\n      <input\n        className={checkBoxStyle}\n        style={{ flex: 'none', width: '24px', height: '24px' }}\n        name=\"user-privacy\"\n        type=\"checkbox\"\n        id=\"user-privacy\"\n        value=\"true\"\n        required\n        checked={isChecked}\n        onChange={handleCheckboxChange}\n      />\n      {isChecked && (\n        <span className=\"absolute top-1 left-0.5 pointer-events-none p-0.5 w-full\">\n          <FaCheck size={16} className=\"pointer-events-none\" />\n        </span>\n      )}\n\n      <label htmlFor=\"user-privacy\">\n        I accept the terms and conditions of the{' '}\n        <span\n          className={`${\n            isThemeDark ? 'text-teal-400' : 'text-teal-600'\n          } ml-2 cursor-pointer`}\n        >\n          Privacy Policy\n        </span>\n      </label>\n    </div>\n  );\n};\n","import { Field, ErrorMessage } from 'formik';\nimport { InputProps } from '../Registration.types';\n\nexport const NameAndEmail: React.FC<InputProps> = ({\n  widthClass,\n  withInputClass,\n  fieldsStyle,\n}) => {\n  return (\n    <>\n      <label\n        className={`\n        ${widthClass}\n        mt-6 text-xl flex items-center gap-2 md:ml-2 md:w-10/12\n      md2:text-sm font-light sm:mt-1`}\n        htmlFor=\"user-name\"\n      >\n        Name\n      </label>\n\n      <Field\n        className={fieldsStyle}\n        type=\"text\"\n        name=\"name\"\n        id=\"name\"\n        max={16}\n        placeholder=\"Antonio Balambino\"\n      />\n      <div className=\"text-sm h-4 w-full text-center -mt-2\">\n        <ErrorMessage className=\" text-errorMsg\" name=\"name\" component=\"p\" />\n      </div>\n      <label\n        className={`\n         ${withInputClass}\n        mt-2 text-xl flex items-center gap-2 md:ml-2 \n      md2:text-sm font-light sm:mt-1`}\n        htmlFor=\"user-email\"\n      >\n        Email\n      </label>\n\n      <Field\n        className={fieldsStyle}\n        type=\"email\"\n        name=\"email\"\n        id=\"email\"\n        placeholder=\"Balambino@mail.com\"\n        required\n      />\n      <div className=\"text-sm h-4 w-full text-center -mt-2\">\n        <ErrorMessage className=\" text-errorMsg\" name=\"email\" component=\"p\" />\n      </div>\n    </>\n  );\n};\n","import { Field, ErrorMessage } from 'formik';\nimport { useState } from 'react';\nimport { PiEyeClosedBold } from 'react-icons/pi';\nimport { HiMiniEye } from 'react-icons/hi2';\nimport { InputProps } from '../Registration.types';\n\nexport const PasswordAndConfirm: React.FC<InputProps> = ({\n  isThemeDark,\n  withInputClass,\n  fieldsStyle,\n}) => {\n  const [showPassword1, setShowPassword1] = useState(false);\n  const [showPassword2, setShowPassword2] = useState(false);\n\n  const togglePassword = (field: number): void => {\n    if (field === 1) {\n      setShowPassword1(prevShowPassword => !prevShowPassword);\n    } else if (field === 2) {\n      setShowPassword2(prevShowPassword => !prevShowPassword);\n    }\n  };\n\n  const showPasswordBtnStyles: string = `${\n    isThemeDark\n      ? ' text-darkFontDark bg-sky-900 placeholder:text-darkFontDark '\n      : ' text-darkFont bg-lightPartsColor placeholder:text-darkFont '\n  } rounded-r-sm w-12 transition-all`;\n\n  const labelStyles: string = `\n    ${withInputClass}\n    mt-2 text-xl flex items-center gap-2 md:ml-2 \n    md2:text-sm font-light sm:mt-1`;\n\n  return (\n    <>\n      {' '}\n      <label className={labelStyles} htmlFor=\"user-phone\">\n        {' '}\n        Password{' '}\n      </label>\n      <div className=\"flex\">\n        <Field\n          className={`${fieldsStyle}  rounded-l-sm`}\n          type={showPassword1 ? 'text' : 'password'}\n          name=\"password\"\n          id=\"password\"\n          min={7}\n          placeholder=\"Enter your password\"\n          required\n        />\n        <button\n          className={showPasswordBtnStyles}\n          type=\"button\"\n          onClick={() => togglePassword(1)}\n        >\n          {showPassword1 ? <HiMiniEye /> : <PiEyeClosedBold />}\n        </button>\n      </div>\n      <div className=\"text-sm h-4 w-full text-center -mt-2\">\n        <ErrorMessage\n          className=\" text-errorMsg text-center m-0 p-0\"\n          name=\"password\"\n          component=\"div\"\n        />\n      </div>\n      <label className={labelStyles} htmlFor=\"user-confirm-password\">\n        Confirm Password\n      </label>\n      <div className=\"flex\">\n        <Field\n          className={`${fieldsStyle}  rounded-l-sm`}\n          type={showPassword2 ? 'text' : 'password'}\n          name=\"confirmPassword\"\n          id=\"confirmPassword\"\n          placeholder=\"Confirm your password\"\n          required\n        />\n        <button\n          className={showPasswordBtnStyles}\n          type=\"button\"\n          onClick={() => togglePassword(2)}\n        >\n          {showPassword2 ? <HiMiniEye /> : <PiEyeClosedBold />}\n        </button>\n      </div>\n      <div className=\"text-sm h-4 w-full text-center -mt-2\">\n        <ErrorMessage\n          className=\" text-errorMsg text-center m-0 p-0\"\n          name=\"confirmPassword\"\n          component=\"div\"\n        />\n      </div>\n    </>\n  );\n};\n","import { NameAndEmail } from './NameAndEmail';\nimport { inputsStyles } from '../Registration.styles';\nimport { RegLogInputsProps } from '../Registration.types';\nimport { PasswordAndConfirm } from './PasswordAndConfirm';\n\nexport const RegLogInputs: React.FC<RegLogInputsProps> = ({\n  windowSize,\n  isThemeDark,\n}) => {\n  const widthClass = windowSize.height > 460 ? 'md3:mt-2' : 'md3:mt-0';\n  const withInputClass = windowSize.height > 460 ? 'md3:mt-2' : 'md3:mt-0';\n\n  const fieldsStyle: string = `${\n    isThemeDark\n      ? ' text-darkFontDark bg-sky-900 placeholder:text-darkFontDark '\n      : ' text-darkFont bg-lightPartsColor placeholder:text-darkFont '\n  } ${inputsStyles}`;\n\n  return (\n    <>\n      <NameAndEmail\n        widthClass={widthClass}\n        withInputClass={withInputClass}\n        fieldsStyle={fieldsStyle}\n      />\n      <PasswordAndConfirm\n        isThemeDark={isThemeDark}\n        withInputClass={withInputClass}\n        fieldsStyle={fieldsStyle}\n      />\n    </>\n  );\n};\n","import { handleRegistration } from '../../helpers/validateRegistration';\nimport { RegistrationFormButton } from './RegistrationFormButton';\nimport { useEffect, useState } from 'react';\nimport { Policy } from './Policy';\nimport { RegLogInputs } from './RegistrationInputs/RegistrInputs';\nimport { RegistrationShine } from 'components/Shine/RegistrationShine';\nimport { useDispatch } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport { registrationSchema } from '../../helpers/constants/schema';\nimport { useAuth } from '../../helpers/hooks/auth-selector-hook';\nimport { useTheme } from '../../helpers/hooks/theme-hook';\nimport { registrationFormStyles } from './Registration.styles';\nimport { Helmet } from 'react-helmet';\nimport { initialValuesTypes } from './Registration.types';\n\n//Formik state\nconst initialValues: initialValuesTypes = {\n  name: '',\n  email: '',\n  password: '',\n  confirmPassword: '',\n};\n\n//Registration form is not have setting to LS option\nconst Registration: React.FC = () => {\n  const [windowSize, setWindowSize] = useState<{\n    width: number;\n    height: number;\n  }>({\n    width: window.innerWidth,\n    height: window.innerHeight,\n  });\n  const dispatch = useDispatch();\n  const { isRefreshing } = useAuth();\n  const { isThemeDark } = useTheme();\n\n  const handleResize = () => {\n    setWindowSize({\n      width: window.innerWidth,\n      height: window.innerHeight,\n    });\n  };\n\n  //resize listener\n  useEffect(() => {\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  const handleSubmit = async (\n    values: { name: string; email: string; password: string },\n    { resetForm }: { resetForm: () => void }\n  ) => {\n    const { name, email, password } = values;\n    const userData = {\n      name: name.trim(),\n      email: email.trim(),\n      password: password.trim(),\n    };\n\n    //validation for inputs\n    handleRegistration(userData, dispatch);\n    resetForm();\n  };\n\n  const formStyles: string = `\n          ${\n            windowSize.height > 460\n              ? 'md3:w-5/12 pb-16 pt-20 '\n              : 'md3:w-10/12  md2:mt-1 pb-8'\n          }  \n          ${\n            isThemeDark\n              ? ' shadow-shadowBoxDark from-smallWraperGradient1Dark to-smallWraperGradient2Dark '\n              : ' from-smallWraperGradient1 shadow-shadowBox to-smallWraperGradient2 '\n          } ${registrationFormStyles} `;\n\n  return (\n    <>\n      <Helmet>\n        <title>StoneBook-Registration</title>\n      </Helmet>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={registrationSchema}\n        onSubmit={handleSubmit}\n        validateOnChange={false}\n        validateOnBlur={false}\n      >\n        <Form autoComplete=\"off\" className={formStyles}>\n          <h1 className=\"text-center text-4xl m-0 mt-1 md:text-2xl md2:text-2xl font-normal\">\n            Registration\n          </h1>\n          <RegLogInputs windowSize={windowSize} isThemeDark={isThemeDark} />\n          <Policy windowSize={windowSize} />\n          <RegistrationFormButton\n            isLoading={isRefreshing}\n            isThemeDark={isThemeDark}\n          />\n        </Form>\n      </Formik>\n      <RegistrationShine windowSize={windowSize} isThemeDark={isThemeDark} />\n    </>\n  );\n};\n\nexport default Registration;\n","import { Dispatch } from 'redux';\nimport { register } from '../redux/auth/operations-auth';\nimport { changeIsLoadingToken } from '../redux/auth/slice-auth';\n\ninterface UserData {\n  name: string;\n  email: string;\n  password: string;\n}\n\ninterface Errors {\n  name?: string;\n  email?: string;\n  password?: string;\n}\n\ninterface Credentials {\n  name: string;\n  email: string;\n  password: string;\n}\n\nconst convertToCredentials = (userData: UserData): Credentials => {\n  return {\n    name: userData.name,\n    email: userData.email,\n    password: userData.password,\n  };\n};\n\nexport const validateRegistration = (userData: UserData): Errors => {\n  let errors: Errors = {};\n\n  if (\n    !userData.name ||\n    userData.name.trim().length < 2 ||\n    userData.name.trim().length > 16\n  ) {\n    errors = {\n      ...errors,\n      name: 'Please enter a name with at least 2 characters.',\n    };\n  }\n\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  if (!userData.email || !emailRegex.test(userData.email.trim())) {\n    errors = { ...errors, email: 'Please enter a valid email address.' };\n  }\n\n  if (!userData.password || userData.password.trim().length < 7) {\n    errors = {\n      ...errors,\n      password: 'Password should be at least 7 characters long.',\n    };\n  }\n\n  return errors;\n};\n\nexport const handleRegistration = (\n  userData: UserData,\n  dispatch: Dispatch<any>\n): Errors | void => {\n  const errors: Errors = validateRegistration(userData);\n\n  if (Object.keys(errors).length === 0) {\n    const credentials: Credentials = convertToCredentials(userData);\n    dispatch(register(credentials));\n  } else {\n    dispatch(changeIsLoadingToken(false));\n    return errors;\n  }\n};\n"],"names":["RegistrationShine","_ref","windowSize","isThemeDark","formWidthClass","height","_jsxs","className","concat","children","_jsx","schema","yup","shape","name","min","max","required","matches","phone","registrationSchema","email","password","confirmPassword","oneOf","undefined","RegistrationFormButton","isLoading","btnStyles","type","disabled","PulseLoader","color","size","_Fragment","Policy","useSelector","getTheme","isChecked","setIsChecked","useState","widthClass","checkBoxStyle","style","flex","width","id","value","checked","onChange","handleCheckboxChange","prevState","FaCheck","htmlFor","NameAndEmail","withInputClass","fieldsStyle","Field","placeholder","ErrorMessage","component","PasswordAndConfirm","showPassword1","setShowPassword1","showPassword2","setShowPassword2","togglePassword","field","prevShowPassword","showPasswordBtnStyles","labelStyles","onClick","HiMiniEye","PiEyeClosedBold","RegLogInputs","initialValues","Registration","setWindowSize","window","innerWidth","innerHeight","dispatch","useDispatch","isRefreshing","useAuth","useTheme","handleResize","useEffect","addEventListener","removeEventListener","formStyles","Helmet","Formik","validationSchema","onSubmit","async","values","resetForm","handleRegistration","userData","errors","trim","length","test","validateRegistration","Object","keys","changeIsLoadingToken","credentials","convertToCredentials","register","validateOnChange","validateOnBlur","Form","autoComplete"],"sourceRoot":""}