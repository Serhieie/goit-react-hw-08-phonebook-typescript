{"version":3,"file":"static/js/458.03bb04a4.chunk.js","mappings":"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","sources":["helpers/constants/schema.ts","components/ContactForm/ContactFormInput/ContactFormInput.tsx","helpers/numberNormalize.ts","components/ContactForm/FormButton/FormButton.tsx","components/ContactForm/ErrorMessages/ErrorMessages.tsx","components/ContactForm/ContactForm.tsx","helpers/nameNormalize.ts","helpers/deleteModalSettings.ts","components/ContactTable/ContactTableItem/ModalForDelete.tsx","components/ContactTable/ContactTableItem/ContactTableItem.tsx","redux/filter/filter-selectors.ts","components/ContactTable/TableHead/TableHead.tsx","components/ContactTable/ContactTable.tsx","components/Filter/Filter-parts-styles/Filter.styles.ts","components/Filter/Filter.tsx","components/App/FilterAndTable.tsx","pages/contacts/Contacts.tsx"],"sourcesContent":["import * as yup from 'yup';\n\nexport const schema = yup.object().shape({\n  name: yup\n    .string()\n    .min(1)\n    .max(18)\n    .required()\n    .matches(/^[a-zA-Zа-яА-ЯіїґІЇҐ].*$/, 'Name must start with letters'),\n  phone: yup\n    .string()\n    .min(7)\n    .max(18)\n    .required()\n    .matches(\n      /^\\+?(\\d{2}-?\\d{3}-?\\d{3}-?\\d{2}-?\\d{2})$|^\\d{7}$|^\\d{10}$|^\\+?\\d{12}$/,\n      `Number must have 7, 10 or 12 digits`\n    ),\n});\n\nexport const registrationSchema = yup.object().shape({\n  name: yup\n    .string()\n    .min(2, 'Name should be at least 2 characters')\n    .max(16, 'Name should not exceed 16 characters')\n    .required('Name is required'),\n  email: yup\n    .string()\n    .email('Please enter a valid email address')\n    .required('Email is required'),\n  password: yup\n    .string()\n    .min(7, 'Password should be at least 7 characters long')\n    .required('Password is required'),\n  confirmPassword: yup\n    .string()\n    .oneOf([yup.ref('password'), undefined], 'Passwords must match')\n    .required('Please confirm your password'),\n});\n","import { LiaUserEditSolid } from 'react-icons/lia';\nimport { FiPhoneMissed } from 'react-icons/fi';\nimport { Field } from 'formik';\nimport { useTheme } from 'helpers/hooks/theme-hook';\n\nexport const Inputs: React.FC = () => {\n  const { isThemeDark } = useTheme();\n  return (\n    <>\n      <label\n        htmlFor=\"name\"\n        className={`mt-2 text-xl flex items-center gap-2 md:ml-2 md:w-10/12\n      md2:text-sm font-light sm:mt-1`}\n      >\n        <LiaUserEditSolid className=\"ml-3 md:ml-6\" />\n        Name\n      </label>\n      <Field\n        type=\"text\"\n        name=\"name\"\n        id=\"name\"\n        placeholder=\"Enter name\"\n        className={`${\n          isThemeDark\n            ? ' text-darkFontDark bg-sky-900 placeholder:text-darkFontDark '\n            : ' text-darkFont bg-lightPartsColor placeholder:text-darkFont '\n        }text-center mx-auto w-11/12 py-1 px-5 rounded-sm h-12 \n          border-0 outline-none   \n           placeholder:font-extralight\n         md:w-10/12    md:h-10 text-xl md:py-0.5 md:px-2 placeholder:opacity-50 \n           ssm:text-base  font-light  transition-all  2xl2:text-2xl`}\n      />\n      <label\n        htmlFor=\"phone\"\n        className={`mt-1 text-xl flex items-center gap-2 md:ml-2 md:w-10/12\n      md:text-4 font-light md2:text-xs`}\n      >\n        <FiPhoneMissed className=\"ml-3 md:ml-6 w-[14px] h-[14px]\" />\n        Phone Number\n      </label>\n      <Field\n        type=\"tel\"\n        name=\"phone\"\n        id=\"phone\"\n        placeholder=\"Enter phone number\"\n        className={`${\n          isThemeDark\n            ? ' text-darkFontDark bg-sky-900 placeholder:text-darkFontDark  '\n            : ' text-darkFont bg-lightPartsColor placeholder:text-darkFont  '\n        } text-center w-11/12 py-1 px-5 rounded-sm h-12 \n        border-0 outline-none mx-auto  \n        md:w-10/12  text-xl md:h-10 md:py-0.5 md:px-2 placeholder:opacity-50 \n        ssm:text-base  placeholder:font-extralight font-light  transition-all 2xl2:text-2xl`}\n      />\n    </>\n  );\n};\n","export default function normalizePhoneNumber(\n  value: string | undefined\n): string {\n  if (!value) {\n    return '';\n  }\n\n  const cleaned: string = value.replace(/\\D/g, '');\n\n  const patterns: RegExp[] = [\n    /^(\\d{2})(\\d{3})(\\d{3})(\\d{4})$/,\n    /^(\\d{3})(\\d{3})(\\d{4})$/,\n    /^(\\d{3})(\\d{4})$/,\n  ];\n\n  for (const pattern of patterns) {\n    const match: RegExpMatchArray | null = cleaned.match(pattern);\n    if (match) {\n      return match.slice(1).join('-');\n    }\n  }\n  return cleaned;\n}\n","import { AiOutlineUserAdd } from 'react-icons/ai';\nimport { PulseLoader } from 'react-spinners';\nimport { useTheme } from 'helpers/hooks/theme-hook';\n\ninterface FormButtonProps {\n  isLoading: boolean;\n}\n\nexport const FormButton: React.FC<FormButtonProps> = ({ isLoading }) => {\n  const { isThemeDark } = useTheme();\n  return (\n    <button\n      type=\"submit\"\n      disabled={isLoading}\n      className={`${\n        isThemeDark\n          ? 'shadow-none hover:bg-buttonHoverColorDark text-buttonTextColorDark hover:text-lightPartsColorDark bg-buttonColorDark'\n          : 'shadow-shadowBox hover:bg-buttonHoverColor text-buttonTextColor bg-buttonColor'\n      } text-center font-light w-40 h-11 rounded-sm border-none outline-none mx-auto cursor-pointer shadow-md flex items-center justify-around transition-all duration-30 ${\n        isThemeDark ? 'text-lg md:w-48' : 'text-lg md:w-48'\n      } ssm:w-40 ssm:h-10 md2:text-sm`}\n    >\n      {isLoading ? (\n        <PulseLoader\n          color={`${isThemeDark ? '#3f78cc ' : '#F5DEB3 '}`}\n          size=\"6px\"\n        />\n      ) : (\n        <>\n          Add Contact <AiOutlineUserAdd />\n        </>\n      )}\n    </button>\n  );\n};\n","import { ErrorMessage } from 'formik';\n\nexport const ErrorMessages: React.FC = () => {\n  return (\n    <div\n      className=\"w-full flex justify-center font-extralight items-center flex-col \n          h-20 mt-2 md:text-base md:h-7 text-center\"\n    >\n      <ErrorMessage\n        className=\"text-xl text-errorMsg m-0 p-0 font-extralight items-center \n              md:w-10/12 md:text-base md2:text-sm\"\n        name=\"name\"\n        component=\"div\"\n      />\n      <ErrorMessage\n        className=\"text-xl text-errorMsg m-0 p-0 font-extralight items-center \n              md:w-10/12 md:text-base md2:text-sm\"\n        name=\"phone\"\n        component=\"div\"\n      />\n    </div>\n  );\n};\n","import { Formik, Form } from 'formik';\nimport { schema } from '../../helpers/constants';\nimport { succesMessage, nameCheckerError } from 'helpers/notiflix';\nimport { Inputs } from './ContactFormInput/ContactFormInput';\nimport normalizePhoneNumber from 'helpers/numberNormalize';\nimport normalizeName from 'helpers/nameNormalize';\nimport { FormButton } from './FormButton/FormButton';\nimport { ErrorMessages } from './ErrorMessages/ErrorMessages';\nimport { useTheme } from 'helpers/hooks/theme-hook';\nimport {\n  useGetAllContactsQuery,\n  usePostContactMutation,\n} from '../../redux/contact/contacts-api';\n\ninterface initialValuesTypes {\n  name: string;\n  phone: string;\n}\n\nconst initialValues: initialValuesTypes = {\n  name: '',\n  phone: '',\n};\n\nexport const ContactForm: React.FC = () => {\n  const { data } = useGetAllContactsQuery(undefined);\n  const { isThemeDark } = useTheme();\n  const [addContact, { isLoading }] = usePostContactMutation();\n\n  const handleSubmit = (\n    values: { name: string; phone: string },\n    { resetForm }: { resetForm: () => void }\n  ) => {\n    const { name, phone } = values;\n\n    let someNum = normalizePhoneNumber(phone);\n    let normName = normalizeName(name);\n\n    //Cheking contact wich already exist\n    const isNameExists =\n      Array.isArray(data) &&\n      data.some(contact => {\n        return contact.name.toLowerCase() === normName.toLowerCase();\n      });\n    const isPhoneExists =\n      Array.isArray(data) &&\n      data.some(contact => {\n        return normalizePhoneNumber(contact.number) === someNum;\n      });\n    if (isNameExists && isPhoneExists) {\n      return nameCheckerError();\n    }\n\n    //adding contact\n    addContact({ name: normName, number: someNum });\n    succesMessage();\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <Form\n        autoComplete=\"off\"\n        className={`${\n          isThemeDark\n            ? ' shadow-shadowBoxDark from-smallWraperGradient1Dark to-smallWraperGradient2Dark '\n            : ' from-smallWraperGradient1 shadow-shadowBox to-smallWraperGradient2 '\n        }  flex gap-2 flex-col w-1/3 py-20 pr-7 pl-5 rounded-sm\n          shadow-lg bg-gradient-to-tr md:py-12 md:px-5 md:min-h-0 md:w-[99%]\n          transition-all  overflow-hidden ssm2:w-12/12 ssm2:py-6 ssm2:m-0 ssm2:pt-16`}\n      >\n        <h1 className=\"text-center text-3xl m-0 md:text-xl md2:text-xl font-normal\">\n          Add Contact Field\n        </h1>\n        <Inputs />\n        <ErrorMessages />\n        <FormButton isLoading={isLoading} />\n      </Form>\n    </Formik>\n  );\n};\n","export default function normalizeName(value: string): string {\n  const splited: string[] = value.split(' ').map((word: string) => {\n    if (word.length === 0) return '';\n    const firstChar: string = word[0];\n    const restOfWord: string = word.slice(1).toLowerCase();\n    return firstChar.toUpperCase() + restOfWord;\n  });\n\n  return splited.join(' ').trim();\n}\n","interface OverlaySettings {\n  position: 'fixed';\n  zIndex: number;\n  top: number | string;\n  left: number | string;\n  right: number | string;\n  bottom: number | string;\n  backgroundColor: string;\n}\n\ninterface ContentSettings {\n  position: 'absolute';\n  top: string;\n  left: string;\n  right: string;\n  bottom: string;\n  marginRight: string;\n  transform: string;\n  border: string;\n  background: string;\n  overflow: string;\n  WebkitOverflowScrolling: string;\n  borderRadius: string;\n  outline: string;\n  padding: string;\n}\n\ninterface Settings {\n  overlay: OverlaySettings;\n  content: ContentSettings;\n}\n\nconst windowWidth = window.innerWidth;\n\nconst settings: Settings = {\n  overlay: {\n    position: 'fixed',\n    zIndex: 999,\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(250, 250, 210, 0.5)',\n  },\n  content: {\n    position: 'absolute',\n    top: '40%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    border: '1px solid #ccc',\n    background: 'rgb(245, 187, 86)',\n    overflow: 'auto',\n    WebkitOverflowScrolling: 'touch',\n    borderRadius: '4px',\n    outline: 'none',\n    padding: windowWidth > 768 ? '60px 40px' : '20px 10px',\n  },\n};\n\nconst settings2: Settings = {\n  overlay: {\n    position: 'fixed',\n    zIndex: 999,\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(48, 45, 62, 0.3)',\n  },\n  content: {\n    position: 'absolute',\n    top: '40%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    border: '1px solid #ccc',\n    background: 'rgb(4, 23, 55)',\n    overflow: 'auto',\n    WebkitOverflowScrolling: 'touch',\n    borderRadius: '4px',\n    outline: 'none',\n    padding: windowWidth > 768 ? '60px 40px' : '20px 10px',\n  },\n};\n\nexport { settings, settings2 };\n","import { settings, settings2 } from 'helpers/deleteModalSettings';\nimport { useRef } from 'react';\nimport { useTheme } from 'helpers/hooks/theme-hook';\nimport Modal, { Styles } from 'react-modal';\nimport { ModalFordeleteProps } from './ContactTableItem.types';\n\nModal.setAppElement('#root');\n\nexport const ModalFordelete: React.FC<ModalFordeleteProps> = ({\n  contact,\n  modalIsOpen,\n  closeModal,\n  handleDelete,\n}) => {\n  const { isThemeDark } = useTheme();\n  const subtitle = useRef<HTMLHeadingElement>(null);\n  return (\n    <Modal\n      style={isThemeDark ? (settings2 as Styles) : (settings as Styles)}\n      isOpen={modalIsOpen}\n      onRequestClose={closeModal}\n      contentLabel=\"Delete Confirmation\"\n      className=\"md:w-[290px] md:p-6 md3:w-[420px] md3:p-12\"\n    >\n      <h2\n        ref={subtitle}\n        className={`${\n          isThemeDark ? 'text-darkFontDark' : 'text-darkFont'\n        } text-center   text-2xl md:text-sm `}\n      >\n        Delete contact{' '}\n        <span className=\"font-bold text-green-700\">{contact.name}</span>?\n      </h2>\n      <div\n        className=\"flex jusrify-center items-center mx-auto mt-10 \n             md:mt-6 gap-1 \"\n      >\n        <button\n          onClick={() => handleDelete(contact.id)}\n          className={`${\n            isThemeDark\n              ? ' bg-deleteBtnColorDark hover:bg-deleteBtnHoverColorDark text-darkFontDark '\n              : ' bg-deleteBtnColor hover:bg-deleteBtnHoverColor text-lightPartsColor '\n          }text-4  \n            border-none py-3 px-10 rounded-0.5 cursor-pointer \n            duration-300 mx-auto  md:py-2 md:px-5\n             font-light 2xl:text-xl`}\n        >\n          Delete\n        </button>\n        <button\n          onClick={closeModal}\n          className={`${\n            isThemeDark\n              ? ' bg-buttonColorDark text-darkFontDark hover:text-lightPartsColorDark hover:bg-buttonHoverColorDark '\n              : ' bg-buttonColor text-lightPartsColor hover:bg-buttonHoverColor '\n          }text-4  \n            border-none py-3 px-10 rounded-0.5 cursor-pointer \n            duration-300 mx-auto  md:py-2 md:px-5\n            font-light 2xl:text-xl`}\n        >\n          Cancel\n        </button>\n      </div>\n    </Modal>\n  );\n};\n","import { AiOutlineUserDelete } from 'react-icons/ai';\nimport { PulseLoader } from 'react-spinners';\nimport normalizePhoneNumber from 'helpers/numberNormalize';\nimport { ModalFordelete } from './ModalForDelete';\nimport { useState } from 'react';\nimport { useDeleteContactMutation } from '../../../redux/contact/contacts-api';\nimport { useTheme } from '../../../helpers/hooks/theme-hook';\nimport { ContactTableItemProps } from './ContactTableItem.types';\n\n//ContactTableItem + Modal window for contact delete\nexport const ContactTableItem: React.FC<ContactTableItemProps> = ({\n  contact,\n  index,\n}) => {\n  const { isThemeDark } = useTheme();\n  const windowWidth: number = window.innerWidth;\n  const [modalIsOpen, setIsOpen] = useState<boolean>(false);\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n\n  const handleDelete = (id: string): void => {\n    deleteContact({ id });\n    setIsOpen(false);\n  };\n\n  const openModal = (): void => {\n    setIsOpen(true);\n  };\n\n  return (\n    <tr\n      className={`${\n        isThemeDark\n          ? ' border-tableBorderColorDark '\n          : ' border-tableBorderColor '\n      } border-b-2  `}\n    >\n      <td\n        width=\"5%\"\n        className={`${\n          isThemeDark ? ' bg-lightPartsColorDark ' : ' bg-lightPartsColor '\n        }p-1 text-cente pl-4 ssm2:pl-2`}\n      >\n        {index + 1}\n      </td>\n      <td\n        width=\"44%\"\n        className={`${\n          isThemeDark ? ' bg-lightPartsColorDark ' : ' bg-lightPartsColor '\n        }p-1 text-center  user-selectable  md:text-md   `}\n      >\n        {contact.name}\n      </td>\n      <td\n        width=\"42%\"\n        className={`${\n          isThemeDark ? ' bg-lightPartsColorDark ' : ' bg-lightPartsColor '\n        }p-1 text-center   md:text-md  user-selectable `}\n      >\n        {normalizePhoneNumber(contact.number)}\n      </td>\n      <td\n        width=\"15%\"\n        className={`${\n          isThemeDark ? ' bg-lightPartsColorDark ' : ' bg-lightPartsColor '\n        } p-1 text-center   md:text-md   pr-3 1xl2:pr-6 `}\n      >\n        <button\n          id=\"delete-btn\"\n          onClick={openModal}\n          disabled={isDeleting}\n          className={` ${\n            isThemeDark\n              ? ' bg-buttonColorDark hover:bg-buttonHoverColorDark text-lightPartsColorDark hover:text-darkFontDark'\n              : ' bg-buttonColor hover:bg-buttonHoverColor text-lightPartsColor '\n          } mx-auto border-none 1xl2:text-lg\n           py-1 px-2 min-w-[50px] min-h-[28px] text-xs cursor-pointer \n           duration-300 flex text-center items-center \n            rounded-sm font-light justify-center sm:min-h-[20px] sm:min-w-[30px]`}\n        >\n          {isDeleting ? (\n            <PulseLoader\n              color={`${isThemeDark ? '#3f78cc ' : '#F5DEB3 '}`}\n              size=\"2px\"\n            />\n          ) : windowWidth < 768 ? (\n            <AiOutlineUserDelete style={{ marginRight: '4px' }} />\n          ) : (\n            'Delete'\n          )}\n        </button>\n      </td>\n      <ModalFordelete\n        contact={contact}\n        modalIsOpen={modalIsOpen}\n        closeModal={closeModal}\n        handleDelete={handleDelete}\n      />\n    </tr>\n  );\n};\n","import { RootState } from '../RootState.type';\n\nexport const getFilterValue = (state: RootState): string =>\n  state.filter.filterValue;\n","import { useTheme } from 'helpers/hooks/theme-hook';\n\nexport const TableHead: React.FC = () => {\n  const { isThemeDark } = useTheme();\n  return (\n    <thead className=\"text-lg  right-0 left-0 top-0 w-full  1xl2:text-2xl\">\n      <tr\n        className={`${\n          isThemeDark\n            ? 'border-tableBorderColorDark '\n            : 'border-tableBorderColor '\n        } border-b-2  `}\n      >\n        <th\n          className={`${\n            isThemeDark\n              ? 'bg-tableHeaderBackgroundDark  text-darkFontDark '\n              : 'bg-tableHeaderBackground text-darkFont '\n          } items-center  \n           font-bold min-w-4 p-2 md:p-0.5 w-[7%]`}\n        >\n          #\n        </th>\n        <th\n          className={`${\n            isThemeDark\n              ? 'bg-tableHeaderBackgroundDark text-darkFontDark '\n              : 'bg-tableHeaderBackground text-darkFont '\n          } items-center \n           font-bold min-w-4 p-2 md:p-0.5  w-[40%]`}\n        >\n          Name\n        </th>\n        <th\n          className={`${\n            isThemeDark\n              ? 'bg-tableHeaderBackgroundDark text-darkFontDark '\n              : 'bg-tableHeaderBackground text-darkFont '\n          }items-center  \n           font-bold min-w-4 p-2 md:p-0.5  w-[42%]`}\n        >\n          Phone Number\n        </th>\n        <th\n          className={`${\n            isThemeDark\n              ? 'bg-tableHeaderBackgroundDark  text-darkFontDark '\n              : ' bg-tableHeaderBackground text-darkFont '\n          }items-center  \n           font-bold min-w-4 p-2 md:p-0.5  pr-3  1xl2:pr-7 w-[15%]`}\n        >\n          Action\n        </th>\n      </tr>\n    </thead>\n  );\n};\n","import React, { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { ContactTableItem } from './ContactTableItem/ContactTableItem';\nimport { getFilterValue } from '../../redux/filter/filter-selectors';\nimport { useTheme } from 'helpers/hooks/theme-hook';\nimport { TableHead } from './TableHead/TableHead';\nimport { ContactTableProps } from './ContactTable.types';\n\nexport const ContactTable: React.FC<ContactTableProps> = ({\n  data,\n  error,\n  isLoading,\n}) => {\n  const filter: string = useSelector(getFilterValue);\n  const { isThemeDark } = useTheme();\n\n  const getVisibleContacts = useMemo(() => {\n    const normalizedFilter = filter.toLowerCase();\n\n    //next step we have arrey operations so we need to check is it arrey or...\n    if (!Array.isArray(data)) {\n      return [];\n    }\n\n    //filter by name or phone\n    const filteredContacts = data.filter(\n      contact =>\n        contact.name.toLowerCase().includes(normalizedFilter) ||\n        contact.number.toLowerCase().includes(normalizedFilter)\n    );\n\n    //all contacts will go trough A-Z sort\n    const sortedContacts = [...filteredContacts].sort((a, b) => {\n      return a.name.localeCompare(b.name);\n    });\n\n    return sortedContacts;\n  }, [data, filter]);\n\n  return (\n    <div className=\"overflow-x-auto  w-[92%] ssm2:w-12/12 ssm2:p-0 ssm2:m-0 ssm2:pb-10 \">\n      <div className=\"h-6\">\n        {isLoading && !data && (\n          <p className=\"text-center font-light text-xs\">Loading...</p>\n        )}\n\n        {!isLoading && data && data.length === 0 && (\n          <p className=\"text-center font-light text-base\">No contacts found.</p>\n        )}\n\n        {error && (\n          <p className=\"text-center font-light text-base\">\n            Error fetching contacts. Please try again later.\n          </p>\n        )}\n      </div>\n\n      <table\n        className={`${\n          isThemeDark\n            ? 'border-tableBorderColorDark '\n            : 'border-tableBorderColor '\n        } border-2  border-collapese \n        mt-5 mb-5 block mx-auto overflow-auto w-full h-[490px] \n         ssm2:w-12/12 ssm2:p-0 ssm2:m-0 ssm2:text-base`}\n      >\n        <TableHead />\n        <tbody className=\"max-h-fit max-w-full  text-xl ssm:text-base    ssm2:text-lg  1xl2:text-2xl\">\n          {!error &&\n            getVisibleContacts.map((contact, index) => (\n              <ContactTableItem\n                key={contact.id}\n                contact={contact}\n                index={index}\n              />\n            ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","export const filterInputStyles: string = `placeholder:opacity-50 flex text-m border-none outline-none w-11/12 max-w-[480px]\n         h-10 rounded mx-auto opacity-70 text-center py-0.5 pr-2 pl-12 placeholder:text-center \n         placeholder:py-1 placeholder:px-5 md:w-[90%] \n          md:pl-10 ssm:pl-1 text-xl placeholder:font-light font-light transition-all\n           placeholder:ssm:text-base`;\n\nexport const filterIconStyles: string = `absolute w-4 h-4 opacity-40 top-3.5 md:left-10 left-14 1xl2:left-12\n        z-10 md:w-5 md:h-5  ssm:hidden   transition-all `;\n\nexport const filterLabelStules: string = `w-[60%] mx-auto mb-2 \n    mt-5 py-1 px-5 rounded-0.5 flex md:w-[85%] md:text-3 md:py-1\n    md:px-2 md2:w-[85%] transition-all relative`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeFilterValue } from '../../redux/filter/filterSlice';\nimport { getFilterValue } from '../../redux/filter/filter-selectors';\nimport { useTheme } from 'helpers/hooks/theme-hook';\nimport { TbUserSearch } from 'react-icons/tb';\nimport {\n  filterInputStyles,\n  filterIconStyles,\n  filterLabelStules,\n} from './Filter-parts-styles/Filter.styles';\n\nexport const Filter: React.FC = () => {\n  const dispatch = useDispatch();\n  const filterValue: string = useSelector(getFilterValue);\n  const { isThemeDark } = useTheme();\n\n  //need for saving in local storage\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value;\n    dispatch(changeFilterValue(value));\n  };\n\n  const inputStyles: string = `${\n    isThemeDark\n      ? ' bg-sky-900 text-darkFontDark placeholder:text-filterPlaceholderColorDark '\n      : 'bg-lightPartsColor text-darkFont placeholder:text-filterPlaceholderColor  '\n  } ${filterInputStyles}`;\n\n  const iconStyles: string = `\n        ${\n          !isThemeDark\n            ? ' text-filterPlaceholderColor '\n            : ' text-filterPlaceholderColorDark '\n        } ${filterIconStyles}\n        `;\n\n  const labelStyles: string = `${\n    isThemeDark ? 'bg-tableHeaderBackgroundDark' : 'bg-filterLabelColor'\n  }  ${filterLabelStules}`;\n\n  return (\n    <label className={labelStyles}>\n      <TbUserSearch className={iconStyles} />\n      <input\n        placeholder=\"Enter name for filter\"\n        type=\"text\"\n        value={filterValue}\n        onChange={handleInputChange}\n        className={inputStyles}\n      />\n    </label>\n  );\n};\n","import { ContactTable } from 'components/ContactTable/ContactTable';\nimport { Filter } from 'components/Filter/Filter';\nimport { GetAllContactsResponse } from 'redux/contact/redux-contacts.type';\nimport { useTheme } from 'helpers/hooks/theme-hook';\n\ninterface FilterAndTableProps {\n  data: GetAllContactsResponse | undefined;\n  error: boolean;\n  isLoading: boolean;\n}\n\nexport const FilterAndTable: React.FC<FilterAndTableProps> = ({\n  data,\n  error,\n  isLoading,\n}) => {\n  const { isThemeDark } = useTheme();\n  //styles for theme changing\n  const themeStyles: string = isThemeDark\n    ? ' shadow-shadowBoxDark from-smallWraperGradient1Dark to-smallWraperGradient2Dark '\n    : ' shadow-shadowBox from-smallWraperGradient1 to-smallWraperGradient2 ';\n\n  return (\n    <div\n      className={`${themeStyles} \n      w-8/12 flex justify-center items-center flex-col\n      px-5 pr-4 rounded-sm shadow-lg min-h-562 ssm:min-h-762\n      select-none bg-gradient-to-tr\n      relative md:mt-3 md:pt-0 md:pb-7 md:px-1 md2:px-2 md:w-11/12\n      transition-all ssm2:w-full ssm2:p-0 ssm2:mt-2`}\n    >\n      <Filter />\n      <ContactTable data={data} error={error} isLoading={isLoading} />\n    </div>\n  );\n};\n","import { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { FilterAndTable } from '../../components/App/FilterAndTable';\nimport { useGetAllContactsQuery } from '../../redux/contact/contacts-api';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\n\nconst Contacts: React.FC = () => {\n  const { data, isLoading, error } = useGetAllContactsQuery(undefined);\n  const isError: boolean = !!error;\n  return (\n    <div\n      className=\"flex gap-4 sm:gap-0 justify-around mx-auto \n    w-11/12   p-14 md3:p-4 1xl2:mt-5  ssm:pt-4  rounded shadow-xl\n    md:flex-col md:items-center md:text-base md:px-1.5 md:w-11/12\n    text-xl min-h-482 ssm:min-h-762 select-none \n    bg-gradient-to-tl \n      relative ssm2:w-[100%] ssm2:p-0  ssm2:m-0 \"\n    >\n      <Helmet>\n        <title>Stone-Contacts</title>\n      </Helmet>\n      <ContactForm />\n      <FilterAndTable data={data} error={isError} isLoading={isLoading} />\n    </div>\n  );\n};\n\nContacts.propTypes = {\n  isThemeDark: PropTypes.bool.isRequired,\n};\n\nexport default Contacts;\n"],"names":["schema","yup","shape","name","min","max","required","matches","phone","registrationSchema","email","password","confirmPassword","oneOf","undefined","Inputs","isThemeDark","useTheme","_jsxs","_Fragment","children","htmlFor","className","_jsx","LiaUserEditSolid","Field","type","id","placeholder","concat","FiPhoneMissed","normalizePhoneNumber","value","cleaned","replace","patterns","pattern","match","slice","join","FormButton","_ref","isLoading","disabled","PulseLoader","color","size","AiOutlineUserAdd","ErrorMessages","ErrorMessage","component","initialValues","ContactForm","data","useGetAllContactsQuery","addContact","usePostContactMutation","Formik","validationSchema","onSubmit","handleSubmit","values","resetForm","someNum","normName","split","map","word","length","firstChar","restOfWord","toLowerCase","toUpperCase","trim","isNameExists","Array","isArray","some","contact","isPhoneExists","number","nameCheckerError","succesMessage","Form","autoComplete","windowWidth","window","innerWidth","settings","overlay","position","zIndex","top","left","right","bottom","backgroundColor","content","marginRight","transform","border","background","overflow","WebkitOverflowScrolling","borderRadius","outline","padding","settings2","Modal","ModalFordelete","modalIsOpen","closeModal","handleDelete","subtitle","useRef","style","isOpen","onRequestClose","contentLabel","ref","onClick","ContactTableItem","index","setIsOpen","useState","deleteContact","isDeleting","useDeleteContactMutation","width","openModal","AiOutlineUserDelete","getFilterValue","state","filter","filterValue","TableHead","ContactTable","error","useSelector","getVisibleContacts","useMemo","normalizedFilter","includes","sort","a","b","localeCompare","Filter","dispatch","useDispatch","inputStyles","iconStyles","labelStyles","TbUserSearch","onChange","event","target","changeFilterValue","FilterAndTable","themeStyles","Contacts","isError","Helmet"],"sourceRoot":""}